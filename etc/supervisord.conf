[supervisord]
user=root
nodaemon=true
logfile=/dev/stdout
logfile_maxbytes=0
pidfile=/tmp/supervisord.pid

[program:gunicorn]
command=gunicorn -c python:seedling.gunicorn_config seedling.wsgi
user=gunicorn
directory=/seedling
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true

[program:nginx]
command=nginx -c /seedling/etc/nginx-base.conf
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true

[program:cron]
command=/seedling/bin/cron.py
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
killasgroup=true
stopasgroup=true


# This enables the use of the supervisorctl program to manage supervisord's processes.
# Exec into the container and use commands like `supervisorctl restart gunicorn` to restart the gunicorn process.
[supervisorctl]
prompt=seedling-supervisor
serverurl=unix:///tmp/supervisord.sock
# supervisorctl isn't accessible from outside the server (since it's running on a socket), but supervisord will throw a
# CRITICAL error message if these aren't specified. See https://github.com/Supervisor/supervisor/issues/717
username = dummy
password = dummy

[unix_http_server]
file=/tmp/supervisord.sock
username = dummy
password = dummy

[rpcinterface:supervisor]
supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface
